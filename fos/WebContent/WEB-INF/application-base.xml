<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/jdbc.properties</value>
			</list>
		</property>
	</bean>
	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="baseDataSource" />

		<property name="mappingJarLocations">
			<list>
				<value>/WEB-INF/lib/huatek_spring_entity.jar</value>
			</list>
		</property>
		<property name="mappingLocations">
		<list>
		    <!-- value>classpath*:/com/huatek/*/hibernate/*.hbm.xml</value -->
			<value>classpath*:/com/huatek/fos/fundsmanagement/entity/hibernate/*.hbm.xml</value>
			<value>classpath*:/com/huatek/fos/financingmanagement/entity/hibernate/*.hbm.xml</value>
			<value>classpath*:/com/huatek/fos/categorymanagement/entity/hibernate/*.hbm.xml</value>
			<value>classpath*:/com/huatek/fos/basemanagement/entity/hibernate/*.hbm.xml</value>
			<value>classpath*:/com/huatek/fos/orginnermanagement/entity/hibernate/*.hbm.xml</value>
			<value>classpath*:/com/huatek/fos/assetdebtmanagement/entity/hibernate/*.hbm.xml</value>
			<value>classpath*:/com/huatek/fos/authorizationmanagement/entity/hibernate/*.hbm.xml</value>
			<value>classpath*:/com/huatek/fos/entrustloanmanagement/entity/hibernate/*.hbm.xml</value>
			<value>classpath*:/com/huatek/fos/fundsreportgather/entity/hibernate/*.hbm.xml</value>
		</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.generate_statistics">false</prop>
				<prop key="hibernate.default_batch_fetch_size">30</prop>
			</props>
		</property>
		<!--
			<property name="lobHandler"> <ref local="oracleLobHandler" />
			</property>
		-->
		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean
						class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
				</entry>
			</map>
		</property>
	</bean>
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="operationLogAspec" class="com.huatek.framework.aspects.OperationLogAspect" />
	<bean id="permitAspec" class="com.huatek.framework.aspects.PermitCheckAspect" />
	<aop:aspectj-autoproxy />
	<!--
		- The controllers are autodetected POJOs labeled with the @Controller
		annotation.
	-->
	<context:component-scan base-package="com.huatek.framework.sso" />
	<context:component-scan base-package="com.huatek.framework.show" />
	<context:component-scan base-package="com.huatek.framework.security" />
	<bean name="openSessionInViewInterceptor"
		class="org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	</bean>
	<bean id="handlerMapping"
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<ref bean="openSessionInViewInterceptor" />
		</property>
	</bean>
	<!--
		Activates various annotations to be detected in bean classes: Spring's
		@Required and @Autowired, as well as JSR 250's @Resource.
	-->
	<context:annotation-config />
	<!--
		use data authority proxy bean replace
		org.springframework.orm.hibernate3.HibernateTemplate
	-->
	<bean id="hibernateTemplate" class="com.huatek.authority.factory.ProxyHibernateTemplate">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!--define portal userInfo implement  -->
	<!--
		<bean id="securityLogin"
		class="com.huatek.portal.service.SecurityLoginServiceImpl"> <property
		name="hibernateTemplate" ref="hibernateTemplate" /> </bean>
	-->
	<bean id="ldapValidate" class="com.huatek.framework.service.LdapValidateServiceImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>
	<bean id="validateUserService" class="com.huatek.framework.service.ValidateUserImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
		<!--
		<property name="ldapValidate" ref="ldapValidate" />
		-->
		<!--
		<property name="securityLogin" ref="securityLogin" />
		-->
	</bean>
	<bean id="groupService" class="com.huatek.framework.service.GroupServiceImpl"></bean>
	<bean id="accountService" class="com.huatek.framework.service.AccountServiceImpl">
		<property name="encryptServiceImpl" ref="encrypt"></property>
	</bean>
	<bean id="systemService" class="com.huatek.framework.service.SystemServiceImpl">
	</bean>
	<bean id="operationService" class="com.huatek.framework.service.OperationServiceImpl">
	</bean>
	<bean id="roleService" class="com.huatek.framework.service.RoleServiceImpl">
	</bean>
	<bean id="sourceService" class="com.huatek.framework.service.SourceServiceImpl">
	</bean>
	<bean id="loginService" class="com.huatek.framework.service.LoginServiceImpl">
	</bean>

	<!-- Encrypt definition -->
	<bean id="encrypt" class="com.huatek.framework.util.DESEncryptor" />
	<!--
		Message source for this context, loaded from localized "messages_xx"
		files
	-->
	<!-- call method information -->
	<bean id="callMethodLog" class="com.huatek.framework.service.LogCallMethodAdvice" />
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>MessageResources</value>
			</list>
		</property>
	</bean>
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />


	<!--
		========================= ASPECT CONFIGURATION
		========================
	-->
	<!-- call method information configuration-->
	<aop:config>
		<aop:aspect id="serviceMethodLog" ref="callMethodLog">
			<aop:pointcut expression="execution(* com.huatek.*.service.*Impl.*(..))"
				id="serviceLogCut" />
			<aop:before method="logInfo" pointcut-ref="serviceLogCut" />
			<aop:after method="logInfoAfter" pointcut-ref="serviceLogCut" />
		</aop:aspect>
	</aop:config>
	<!-- Transaction configuration  -->
	<aop:config>
		<aop:pointcut id="frameworkMethods"
			expression="execution(* com.huatek.framework.service.*Impl.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="frameworkMethods" />
	</aop:config>
	<aop:config>
		<aop:pointcut id="baseServiceMethods"
			expression="execution(* com.huatek.base.service.*Impl.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="baseServiceMethods" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!--
			<tx:method name="get*" read-only="true"/>
      		-->
			<!-- other methods use the default transaction settings (see below) -->
			<tx:method name="*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
</beans>
